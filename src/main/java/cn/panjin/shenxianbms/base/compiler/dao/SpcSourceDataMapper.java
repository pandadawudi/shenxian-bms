package cn.panjin.shenxianbms.base.compiler.dao;

import cn.panjin.shenxianbms.base.compiler.entity.SpcSourceData;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

@Repository
public interface SpcSourceDataMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spc_source_data
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spc_source_data
     *
     * @mbggenerated
     */
    int insert(SpcSourceData record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spc_source_data
     *
     * @mbggenerated
     */
    SpcSourceData selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spc_source_data
     *
     * @mbggenerated
     */
    List<SpcSourceData> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table spc_source_data
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(SpcSourceData record);

    List<SpcSourceData> getSourceDataByStatus(@Param("dataStatus") Integer dataStatus );

    List<SpcSourceData> getSourceDataByIds(String[] idsArr);

    /**
     * 直接执行SQL
     */
    Object executeSqlToByte(@Param("sql") String sql);
    Object executeSqlToShort(@Param("sql") String sql);
    Object executeSqlToInteger(@Param("sql") String sql);
    Object executeSqlToLong(@Param("sql") String sql);
    Object executeSqlToFloat(@Param("sql") String sql);
    Object executeSqlToDouble(@Param("sql") String sql);
    Object executeSqlToBoolean(@Param("sql") String sql);
    Object executeSqlToCharacter(@Param("sql") String sql);
    Object executeSqlToString(@Param("sql") String sql);
    Object executeSqlToBigDecimal(@Param("sql") String sql);
    Object executeSqlToObject(@Param("sql") String sql);
}