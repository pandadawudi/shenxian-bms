<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.panjin.shenxianbms.base.compiler.dao.SpcSourceDataMapper" >
  <resultMap id="BaseResultMap" type="cn.panjin.shenxianbms.base.compiler.entity.SpcSourceData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="data_name" property="dataName" jdbcType="VARCHAR" />
    <result column="data_english_name" property="dataEnglishName" jdbcType="VARCHAR" />
    <result column="data_type" property="dataType" jdbcType="VARCHAR" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="field_name" property="fieldName" jdbcType="VARCHAR" />
    <result column="data_status" property="dataStatus" jdbcType="INTEGER" />
    <result column="data_sql" property="dataSql" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from spc_source_data
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.panjin.shenxianbms.base.compiler.entity.SpcSourceData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into spc_source_data (id, data_name, data_english_name, 
      data_type, `table_name`, field_name, 
      data_status, data_sql)
    values (#{id,jdbcType=BIGINT}, #{dataName,jdbcType=VARCHAR}, #{dataEnglishName,jdbcType=VARCHAR}, 
      #{dataType,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{fieldName,jdbcType=VARCHAR}, 
      #{dataStatus,jdbcType=INTEGER}, #{dataSql,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.panjin.shenxianbms.base.compiler.entity.SpcSourceData" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update spc_source_data
    set data_name = #{dataName,jdbcType=VARCHAR},
      data_english_name = #{dataEnglishName,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      `table_name` = #{tableName,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=INTEGER},
      data_sql = #{dataSql,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, data_name, data_english_name, data_type, `table_name`, field_name, data_status, 
    data_sql
    from spc_source_data
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, data_name, data_english_name, data_type, `table_name`, field_name, data_status, 
    data_sql
    from spc_source_data
  </select>
  <select id="getSourceDataByStatus" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, data_name, data_english_name, data_type, `table_name`, field_name, data_status,
    data_sql
    from spc_source_data
    where data_status = #{dataStatus,jdbcType=INTEGER}
  </select>
  <select id="getSourceDataByIds" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, data_name, data_english_name, data_type, `table_name`, field_name, data_status,
    data_sql
    from spc_source_data
    where id in
    <foreach collection="array" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
  <select id="executeSqlToByte" parameterType="java.lang.String" resultType="java.lang.Byte">
    ${sql}
  </select>
  <select id="executeSqlToShort" parameterType="java.lang.String" resultType="java.lang.Short">
    ${sql}
  </select>
  <select id="executeSqlToInteger" parameterType="java.lang.String" resultType="java.lang.Integer">
    ${sql}
  </select>
  <select id="executeSqlToLong" parameterType="java.lang.String" resultType="java.lang.Long">
    ${sql}
  </select>
  <select id="executeSqlToFloat" parameterType="java.lang.String" resultType="java.lang.Float">
    ${sql}
  </select>
  <select id="executeSqlToDouble" parameterType="java.lang.String" resultType="java.lang.Double">
    ${sql}
  </select>
  <select id="executeSqlToBoolean" parameterType="java.lang.String" resultType="java.lang.Boolean">
    ${sql}
  </select>
  <select id="executeSqlToCharacter" parameterType="java.lang.String" resultType="java.lang.Character">
    ${sql}
  </select>
  <select id="executeSqlToString" parameterType="java.lang.String" resultType="java.lang.String">
    ${sql}
  </select>
  <select id="executeSqlToBigDecimal" parameterType="java.lang.String" resultType="java.math.BigDecimal">
    ${sql}
  </select>
  <select id="executeSqlToObject" parameterType="java.lang.String" resultType="java.lang.Object">
    ${sql}
  </select>
</mapper>